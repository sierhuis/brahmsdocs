<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ejenta - Products - Brahms Composer</title>
    <link rel="stylesheet" type="text/css" href="../style/modern_style.css">
    <link rel="SHORTCUT ICON" href="../logo.ico">
</head>
<body>

    <header>
        <img src="../images/aislogo_600_small.jpg" alt="Ejenta Logo" class="logo">
        <nav class="top-nav">
            <ul>
                <li><a href="../index.htm">Home</a></li>
                <li><a href="index.htm" class="active">Products</a></li>
                <li><a href="../documentation/index.htm">Documentation</a></li>
                <li><a href="../download/index.htm">Download</a></li>
                <li><a href="../support/index.htm">Support</a></li>
            </ul>
        </nav>
    </header>

    <div class="main-container">
        <aside class="sidebar">
            <nav class="side-nav">
                <h2>Products</h2>
                <ul>
                    <li><a href="index.htm">Overview</a></li>
                    <li>
                        Brahms
                        <ul>
                            <li><a href="agentenvironment.htm">Agent Environment</a></li>
                            <li><a href="compiler.htm">Compiler</a></li>
                            <li><a href="vm.htm">Virtual Machine</a></li>
                            <li><a href="composer.htm" class="active">Composer</a></li>
                            <li><a href="agentviewer.htm">Agent Viewer</a></li>
                        </ul>
                    </li>
                </ul>
            </nav>
        </aside>

        <main class="content">
            <div class="doc-header">
                <h1>Brahms Composer</h1>
            </div>
            <hr>
            <section class="doc-content">
                <p>The Brahms Composer is the Brahms Integrated Development Environment (IDE). This Composer replaces the former Brahms Builder. The Composer allows a Brahms developer to quickly and easily develop models of work practice. The Composer integrates a selection of tools in one easy to use environment.</p>
                <p>The Composer will grow into the main environment from which everything related to Brahms can be controlled, from design, implementation, debugging, and testing, to agent environment and agent control and monitoring, to analysis and reporting.</p>
                <p>The Composer currently integrates the following main components:</p>
                <ol>
                    <li>Designers for the various sub models that are part of a Brahms model of work practice, designers for the agent model, object model, conceptual object model, geography model and activity model.</li>
                    <li>Source code editor with syntax color coding and syntax checking.</li>
                    <li>Package explorer to organize and manage the source code files in their respective packages.</li>
                    <li>Document outline to visualize the model elements in the currently active source code editor.</li>
                    <li>Compiler, to check the syntax and semantics (such as type checking) of a model.</li>
                    <li>Task list displaying the syntax and semantical errors found in the model, allowing a developer to quickly find and jump to the place in source code where the error occurs.</li>
                    <li>The Agent Viewer to visualize and analyze the agent behaviors after a run.</li>
                </ol>

                <div class="image-gallery">
                    <figure>
                        <a href="../images/ide_designers1.jpg" target="_blank"><img src="../images/ide_designers1_s.jpg" alt="Agent and Object Model Designers"></a>
                    </figure>
                    <figure>
                        <a href="../images/ide_designers2.jpg" target="_blank"><img src="../images/ide_designers2_s.jpg" alt="Geography, Conceptual Object and Activity Model Designers"></a>
                    </figure>
                    <figure>
                        <a href="../images/ide_sourcecodeeditor.jpg" target="_blank"><img src="../images/ide_sourcecodeeditor_s.jpg" alt="Source Code Editor"></a>
                    </figure>
                    <figure>
                        <a href="../images/ide_buildmodel.jpg" target="_blank"><img src="../images/ide_buildmodel_s.jpg" alt="Build Model and Task List"></a>
                    </figure>
                </div>

                <p>The Composer organizes all of the components by means of so-called dockable windows. The designers and task list can be placed at various locations within the Composer to best suit the productivity of the developer. Dockable windows can be merged with one another into one window allowing each component to be accessed through a tab. The Composer preserves the layout between Composer sessions.</p>
                <p>The designers give you a quick and manageable overview of your entire model, making maintenance of your model easier. The designers support creating and editing all Brahms language elements and support drag and drop capabilities to associate elements with one another. It is possible to create entire models using only the designers without manually writing any source code. The Composer will generate the source code for every edit made in the designers.</p>
                
                <div class="image-gallery">
                    <figure>
                        <a href="../images/ide_agenteditor.jpg" target="_blank"><img src="../images/ide_agenteditor_s.jpg" alt="Agent Editor"></a>
                    </figure>
                    <figure>
                        <a href="../images/ide_beliefeditor.jpg" target="_blank"><img src="../images/ide_beliefeditor_s.jpg" alt="Belief and Fact Editor"></a>
                    </figure>
                    <figure>
                        <a href="../images/ide_attributeeditor.jpg" target="_blank"><img src="../images/ide_attributeeditor_s.jpg" alt="Attribute Editor"></a>
                    </figure>
                    <figure>
                        <a href="../images/ide_activityeditor.jpg" target="_blank"><img src="../images/ide_activityeditor_s.jpg" alt="Activity Editor"></a>
                    </figure>
                </div>

                <p>The Composer seamlessly integrates the designers with the source code editors. Changes made through the designers are reflected in the source code preserving any comments or formatting of other code you have in a file. Changes made in a source code editor are reflected in the designers.</p>
                <p>The source code editor highlights certain words in different colors to highlight which words are reserved language keywords, what are comments and what are identifiers or other non keyword values. The source code editor supports multiple levels of undo/redo. The source code editor parses the contents of the file after saving the file and displays any syntax errors you might have in the file in the task list.</p>
                
                <div class="image-gallery">
                     <figure>
                        <a href="../images/ide_tilehorizontally.jpg" target="_blank"><img src="../images/ide_tilehorizontally_s.jpg" alt="Tile Windows Horizontally"></a>
                    </figure>
                </div>

                <p>When the developer is ready he/she can build/compile the entire model to generate the code necessary to either simulate the model or to start the agent-based system using the Brahms virtual machine. Future versions of the Composer will allow you to start the virtual machine from the Composer as well. Any errors or warnings reported by the Brahms compiler will be listed in the Composer's task list. The developer can quickly jump to the location in the source files where the errors were found by double clicking the error in the task list.</p>
                <p>New models can be created using the IDE, but also models that were developed outside of the Brahms Composer can easily be loaded into the Composer by using the Composer's import function.</p>
                
                <div class="image-gallery">
                    <figure>
                        <a href="../images/ide_newmodel.jpg" target="_blank"><img src="../images/ide_newmodel_s.jpg" alt="New Model"></a>
                    </figure>
                    <figure>
                        <a href="../images/ide_openmodel.jpg" target="_blank"><img src="../images/ide_openmodel_s.jpg" alt="Open Model"></a>
                    </figure>
                    <figure>
                        <a href="../images/ide_importmodel.jpg" target="_blank"><img src="../images/ide_importmodel_s.jpg" alt="Import Model"></a>
                    </figure>
                </div>

                <p>Future versions will integrate the Brahms Agent Viewer and Agent Monitor into the Composer as well to allow a developer to effortlessly go through the various stages of development from design to implementation to testing and analysis. Stay tuned...</p>
            </section>
        </main>
    </div>

    <footer>
        <hr>
        <p>Copyright &#169; 2012-2025 Ejenta, Inc. All rights reserved.</p>
        <p>Last modified: August 25, 2025.</p>
    </footer>

</body>
</html>
