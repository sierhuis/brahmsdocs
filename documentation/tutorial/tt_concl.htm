<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 6.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>Agent iSolutions - Tutorial - Concluding Remarks</title>
<link rel="stylesheet" type="text/css" href="../../style/ais_style.css">
<script type="text/javascript" src="../doctree.jsc"></script>
<script type="text/javascript" src="../../scripts/treescript.jsc"></script>
</head>

<body onload="open_folder_to_page('OUT10t,OUT13t,OUT26t,DT87')">
<table border="0" width="100%" cellspacing="0" cellpadding="0" height="29">
  <tr>
    <td width="168" valign="bottom" rowspan="2" height="29"><img border="0" src="../../images/aislogo_600_small.jpg" WIDTH="168" HEIGHT="78"></td>
    <td width="439" height="46" align="left" valign="bottom" colspan="12">o</td>
  </tr>
  <tr>
    <td width="11" height="1" align="left" valign="bottom"><img border="0" src="../../images/nb_sep.gif" WIDTH="11" HEIGHT="34"></td>
    <td width="73" height="1" align="left" valign="bottom" background="../../images/nb_background.jpg"><p class="nb_text"><a style="text-decoration:none;" href="../../index.htm">Home</a></td>
    <td width="12" height="1" align="left" valign="bottom"><img border="0" src="../../images/nb_sep.gif" WIDTH="11" HEIGHT="34"></td>
    <td width="104" height="1" align="left" valign="bottom" background="../../images/nb_background.jpg"><p class="nb_text"><a style="text-decoration:none;" href="../../products/index.htm">Products</a></td>
    <td width="23" height="1" align="left" valign="bottom"><img border="0" src="../../images/nb_sep.gif" WIDTH="11" HEIGHT="34"></td>
    <td width="49" height="1" align="left" valign="bottom" background="../../images/nb_background.jpg"><p class="nb_text"><a href="../index.htm">Documentation</a></td>
    <td width="16" height="1" align="left" valign="bottom"><img border="0" src="../../images/nb_sep.gif" WIDTH="11" HEIGHT="34"></td>
    <td width="45" height="1" align="left" valign="bottom" background="../../images/nb_background.jpg"><p class="nb_text"><a style="text-decoration:none;" href="../../download/index.htm">Download</a></td>
    <td width="45" height="1" align="left" valign="bottom"><img border="0" src="../../images/nb_sep.gif" WIDTH="11" HEIGHT="34"></td>
    <td width="45" height="1" align="left" valign="bottom" background="../../images/nb_background.jpg"><p class="nb_text"><a style="text-decoration:none;" href="../../support/index.htm">Support</a></td>
    <td width="16" height="1" align="left" valign="bottom"><img border="0" src="../../images/nb_sep.gif" WIDTH="11" HEIGHT="34"></td>
    <td width="100%" height="1" align="left" valign="bottom" background="../../images/nb_background.jpg"></td>
  </tr>
</table>
<div align="left">

<table border="0" cellpadding="0" cellspacing="0" width="100%">
  <tr>
    <td height="10" width="100%"></td>
  </tr>
</table>
</div><div align="left">

<table border="0" cellpadding="0" cellspacing="0" width="100%" height="200">
  <tr>
    <td width="164" valign="top" bgcolor="#6C69F7" height="1%"><p class="TOCHeader">Documentation</td>
    <td width="12" rowspan="7" valign="top" height="200"><img border="0" src="../../images/vline.gif" width="6" height="1000" hspace="3"> </td>
    <td width="100%" valign="top" align="justify" height="1" colspan="5"><p class="aisheader1">Tutorial
    - Concluding Remarks</td>
  </tr>
  <tr>
    <td width="167" rowspan="6" valign="top" height="200"><script language="javascript">
      	 <!--
      	 	createDocumentTree("../");
      	 -->
      	 </script>
    </td>
    <td width="100%" valign="top" align="left" height="1" colspan="5"><hr COLOR="#C0C0C0" NOSHADE align="left" size="1">
    </td>
  </tr>
  <tr>
    <td width="12%" valign="top" align="left" height="1"><p class="ls_nav_text_l"><a href="tt_le11_txt.htm">Prev</a> </td>
    <td width="25%" valign="top" align="left" height="1"></td>
    <td width="25%" valign="top" align="left" height="1"></td>
    <td width="25%" valign="top" align="left" height="1"></td>
    <td width="12%" valign="top" align="left" height="1"><p class="ls_nav_text_r" align="left"><a href="tt_files.htm">Next</a> </td>
  </tr>
  <tr>
    <td width="100%" valign="top" align="justify" height="1" colspan="5"><hr COLOR="#C0C0C0" NOSHADE align="left" size="1">
    </td>
  </tr>
  <tr>
    <td width="100%" valign="top" align="justify" height="400" colspan="5"><p class="aisheader2">
    How to Build your Next Model</p>
    <p class="aisparagraph">The steps we have followed in this tutorial were appropriate to learn
    progressively more concepts of the Brahms language, but are not the best ones to build a
    new model when you have already mastery of those concepts. The Brahms design team suggests
    these steps for modelers who already know about Brahms structures and conventions:</p>
    <p class="aisparagraph">
    1. Write a scenario of what the Brahms model is to model and define the objectives. </p>
    <p class="aisparagraph">
    2. Go through the scenario and make a list of all concepts in the scenario, concepts like
    agents (people), artifacts (objects), areas (locations) and conceptual objects.</p>
    <p class="aisparagraph">
    3. Go through the scenario and find all attributes that say something about the agents or
    objects in the scenario and list them with the appropriate agent or object.</p>
    <p class="aisparagraph">
    4. Do the same for relations. Find relationship between agent, objects, areas, and
    conceptual objects, name them and assign them to one of the concepts you listed in 2.</p>
    <p class="aisparagraph">
    5. Go through the scenario and make a list of all the activities performed by the agents
    and objects and place them with the agent or object for which the activity was defined in
    the scenario.</p>
    <p class="aisparagraph">
    6. Next, make a classification hierarchy for all the concepts with their attributes,
    relations and activities. Like in object-oriented programming verify whether certain
    attributes should be more generic and should be listed higher in the hierarchy for re-use.</p>
    <p class="aisparagraph">
    7. Once you have your hierarchy defined, start thinking about the conditions under which
    the activities are performed by again going back to the scenario. For each activity and
    for each agent or object define the conditions under which the activity will be performed.
    Also specify how long the activity should take and what states can be concluded when the
    activity is performed. Also think about the priorities of the activities. All this
    information will be used as the basis for defining your workframes. When defining you
    conditions you have access to the four precondition modifier (known, knownval, unknown,
    and not). Think also about making workframes generic by using variables. Use variables
    also to define how an agent or object will work on/with one or more variable bindings. As
    a final though for activities think about whether the agent or object should be able to
    detect something in the world, i.e. see something happening while working on the activity
    (red light blinking on the phone) and define the exact state that is to be detected. </p>
    <p class="aisparagraph">
    8. For measurement purposes you should associate resources with activities. The resource
    usage can in turn be used to do some statistical analysis to get answers to your
    measurement questions. </p>
    <p class="aisparagraph">
    9. Once you have defined the workframes for each agent and object you can simulate your
    model and see what happens. Let the work process emerge and you might find interesting
    observations. Before you see the process emerge you most likely have to fine-tune your
    model. You might find that certain activities are not being performed due to conditions
    not being correct, activities not being performed because priorities are not set
    correctly, etc. This will be your debugging cycle. You will go back and forth between your
    Brahms model design, implementation and simulation results. </p>
    <p class="aisheader2">Debugging Tips</p>
    <p class="aisparagraph">The AgentViewer and its ExplanationFacility are the best places to
    start debugging your simulation (assuming you have one and that the Brahms Builder did not
    throw out errors when compiling the Brahms files). </p>
    <p class="aisparagraph">
    In same cases, the Brahms Builder will work fine but the simulation run will never end.
    This might be due to the fact that the simulation is truly not supposed to end. But it
    might also be a loop or a composite activity with an 'hole' inside (a missing step where
    no activity inside the composite activity is not triggered). In these cases, you might
    halt the simulation manually if you have previously an (undocumented) flag -ui in the bvm
    bat file. This flag will let you halt the simulation in a smooth way, so that you can then
    use the AgentViewer to see what was going on. Remember, however, that in some cases it
    might prove useful to go through the text file containing the simulation history itself,
    because it can be telling about what is going wrong.</p>
    <p class="aisparagraph">
    You can also set your VM to have debug information as output. In the vm.cgf you modify the
    'information' line by adding the 'debug'. Furthemore, you might also check the Logs
    directory in PersonalAgent and open the log file. You might also open
    eventinformation.txt, and the event history .txt file itself that is going to be parsed by
    the AgentViewer.</p>
    <p class="aisparagraph">
    Some common problems are workframes continuously repeated, workframes not triggered (in
    which case you must find out which preconditions do not hold and make the conclusions be
    skipped), thoughtframes always repeating (recall that thoughtframes take no time, so you
    must be careful with their repetitions). You must also pay a lot of attention to the order
    at which things happen (or should happen). The VM checks all the workframes everytime an
    action or a conclusion takes place, to see which must be activated next. Sometimes an
    apparently trivial issue of ordering might cause the continuous repetitions of the same
    activity. Furthermore, composite activities must be used with attention: the simulation
    might get stuck if you do not have a coherent flow of procedures inside the composite
    activity itself. Finally, a simulation might never halt, as long as some workframe is
    active (a simulation might also never halt if the Virtual Machine has entered some kind of
    loop or impasse).</p>
    <p class="aisparagraph">
    Remember how binding and beliefs are really crucial in workframes and thoughtframes (for
    what relates to beliefs, we are referring to agents here; objects act on facts). To use
    variables, you have to bind them with the preconditions (there are exceptions to this
    rule, and we will discuss them later in this section). But to evaluate the preconditions,
    your agents need beliefs. If your code is not working as you expect, try checking first if
    these crucial steps (beliefs and binding) have been coded correctly!</p>
    <p class="aisparagraph">
    A final tip: remember to clean up the folder with the Brahms files you are working on from
    time to time, especially the xml files - older versions might accumualate when you change
    the names of components, and create either confusion or compilation/simulation errors.</p>
    <p class="aisheader2">Further exercises</p>
    <p class="aisparagraph">In this tutorial we have not covered all the aspects of the Brahms
    universe. If you want to know more, for example, about conceptual objects, java
    activities, and the Brahms real time components, you are invited to visit regularly the
    www.agentisolutions.com website. You might also want to consider the following
    developments for further exercises in the Atm scenario:</p>
    <p class="aisparagraph">
    - what if each bank has more than one Atm? can you make the agent choose the closest one?</p>
    <p class="aisparagraph">
    - can you model the objects (say, Banks and Atms) as agents? what will change? do you
    notice changes in the behavior related to detectables and communications?</p>
    <p class="aisparagraph">
    - what if more students go to the same Atm at the same time? can you make the Atm handle
    just one order at a time, but the Bank central computer multiple orders coming from
    several Atms?</p>
    <p class="aisparagraph">
    - can you make the agents randomly meet and interact (e.g., say hello each to the other)?</p>
    <p class="aisparagraph">
    - what if you want the Atm to remember the number of the cards if has refused?</td>
  </tr>
</table>
</div><div align="left">

<table border="0" width="100%" cellpadding="0" cellspacing="0">
  <tr>
    <td width="100%"><hr COLOR="#C0C0C0" NOSHADE align="left" size="1">
    </td>
  </tr>
  <tr>
    <td width="100%" align="center"><font size="1" face="Arial">Questions or problems
    regarding this web site should be directed to the <a href="mailto:webmaster@agentisolutions.com">Webmaster</a>.<br>
    Copyright � 2000 NASA Ames Research Center. All rights reserved.<br>
    Last modified: 
	<!--webbot bot="TimeStamp" S-Type="EDITED" S-Format="%A %B %d, %Y" startspan -->Monday April 30, 2007<!--webbot bot="TimeStamp" i-checksum="31391" endspan -->.</font></td>
  </tr>
</table>
</div>
</body>
</html>
