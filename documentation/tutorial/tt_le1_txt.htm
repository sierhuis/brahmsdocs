<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 6.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>Agent iSolutions - Tutorial - Lesson I - Text</title>
<link rel="stylesheet" type="text/css" href="../../style/ais_style.css">
<script type="text/javascript" src="../doctree.jsc"></script>
<script type="text/javascript" src="../../scripts/treescript.jsc"></script>
</head>

<body onload="open_folder_to_page('OUT10t,OUT13t,OUT15t,DT55');">
<table border="0" width="100%" cellspacing="0" cellpadding="0" height="29">
  <tr>
    <td width="168" valign="bottom" rowspan="2" height="29"><img border="0" src="../../images/aislogo_600_small.jpg" WIDTH="168" HEIGHT="78"></td>
    <td width="439" height="46" align="left" valign="bottom" colspan="12"></td>
  </tr>
  <tr>
    <td width="11" height="1" align="left" valign="bottom"><img border="0" src="../../images/nb_sep.gif" WIDTH="11" HEIGHT="34"></td>
    <td width="73" height="1" align="left" valign="bottom" background="../../images/nb_background.jpg"><p class="nb_text"><a style="text-decoration:none;" href="../../index.htm">Home</a></td>
    <td width="12" height="1" align="left" valign="bottom"><img border="0" src="../../images/nb_sep.gif" WIDTH="11" HEIGHT="34"></td>
    <td width="104" height="1" align="left" valign="bottom" background="../../images/nb_background.jpg"><p class="nb_text"><a style="text-decoration:none;" href="../../products/index.htm">Products</a></td>
    <td width="23" height="1" align="left" valign="bottom"><img border="0" src="../../images/nb_sep.gif" WIDTH="11" HEIGHT="34"></td>
    <td width="49" height="1" align="left" valign="bottom" background="../../images/nb_background.jpg"><p class="nb_text"><a href="../index.htm">Documentation</a></td>
    <td width="16" height="1" align="left" valign="bottom"><img border="0" src="../../images/nb_sep.gif" WIDTH="11" HEIGHT="34"></td>
    <td width="45" height="1" align="left" valign="bottom" background="../../images/nb_background.jpg"><p class="nb_text"><a style="text-decoration:none;" href="../../download/index.htm">Download</a></td>
    <td width="45" height="1" align="left" valign="bottom"><img border="0" src="../../images/nb_sep.gif" WIDTH="11" HEIGHT="34"></td>
    <td width="45" height="1" align="left" valign="bottom" background="../../images/nb_background.jpg"><p class="nb_text"><a style="text-decoration:none;" href="../../support/index.htm">Support</a></td>
    <td width="16" height="1" align="left" valign="bottom"><img border="0" src="../../images/nb_sep.gif" WIDTH="11" HEIGHT="34"></td>
    <td width="100%" height="1" align="left" valign="bottom" background="../../images/nb_background.jpg"></td>
  </tr>
</table>
<div align="left">

<table border="0" cellpadding="0" cellspacing="0" width="100%">
  <tr>
    <td height="10" width="100%"></td>
  </tr>
</table>
</div><div align="left">

<table border="0" cellpadding="0" cellspacing="0" width="100%" height="200">
  <tr>
    <td width="164" valign="top" bgcolor="#6C69F7" height="1%"><p class="TOCHeader">Documentation</td>
    <td width="12" rowspan="9" valign="top" height="200"><img border="0" src="../../images/vline.gif" width="6" height="492" hspace="3"> </td>
    <td width="100%" valign="top" align="justify" height="1" colspan="5"><p class="aisheader1">Tutorial
    - Lesson I - Text</td>
  </tr>
  <tr>
    <td width="167" rowspan="8" valign="top" height="200"><script language="javascript">
         <!--
            createDocumentTree("../");
         -->
         </script>
    </td>
    <td width="100%" valign="top" align="left" height="1" colspan="5"><hr COLOR="#C0C0C0" NOSHADE align="left" size="1">
    </td>
  </tr>
  <tr>
    <td width="12%" valign="top" align="left" height="1"><p class="ls_nav_text_l"><a href="tt_ius_agv.htm">Prev</a> </td>
    <td width="25%" valign="top" align="left" height="1"><p class="ls_nav_text_c"><font color="#808080">Text</font> </td>
    <td width="25%" valign="top" align="left" height="1"><p class="ls_nav_text_c"><a href="tt_le1_cod.htm">Code</a> </td>
    <td width="25%" valign="top" align="left" height="1"><p class="ls_nav_text_c"><a href="tt_le1_syn.htm">Syntax</a> </td>
    <td width="12%" valign="top" align="left" height="1"><p class="ls_nav_text_r" align="left"><a href="tt_le2_txt.htm">Next</a> </td>
  </tr>
  <tr>
    <td width="100%" valign="top" align="justify" height="1" colspan="5"><hr COLOR="#C0C0C0" NOSHADE align="left" size="1">
    </td>
  </tr>
  <tr>
    <td width="100%" valign="top" align="justify" height="400" colspan="5"><p style="margin-left:0in;text-indent:0in" class="aisnormal">&nbsp;</p>
    <p class="aisheader2">Introduction</p>
    <p class="aisnormal"><br>
    This chapter will get you started with your first Brahms file - your first 'compilation
    unit.' </p>
    <p class="aisheader2"><br>
    Task</p>
    <p class="aisnormal"><br>
    Create a Brahms file that contains a package declaration and an import declaration to be
    used during the development of the Atm tutorial.</p>
    <p class="aisheader2"><br>
    Tutorial</p>
    <p class="aisnormal"><br>
    A compilation unit is a file with the extension '.b'. Quite simply, we might say that a
    compilation unit is each and any of the Brahms files in your Brahms model. Why do we need
    several files to simulate one Brahms model? Well, that's up to you as a modeler. In
    theory, you could write your whole model in one, single, long .b file. This practice
    however is highly discouraged. Practicality and clarity, among other reasons, suggest to
    use different files for different concepts (for example, a file for each group, a file for
    each agent, etc.) stored in the same folder (or in folders which are part of the same
    tree). </p>
    <p class="aisnormal"><br>
    Technically, a compilation unit consists of three parts, each of which is optional:</p>
    <p class="aisnormal"><br>
    � A package declaration, giving the fully qualified name of the package to which the
    compilation unit belongs <br>
    � Import statements that allow types from other packages to be referred to using their
    simple names <br>
    � Type declarations of group, agent, class, object, conceptual object class, conceptual
    object, area definition, area and path types.</p>
    <p class="aisnormal"><br>
    The package declaration appears within a compilation unit to indicate the package to which
    the compilation unit belongs. The compiler loads a '.b' file when it is referenced in an
    import declaration. Hence, the first compilation unit that you will write for your Atm
    model will be a .b file whose only purpose is that of loading all the other .b files that
    are part of the project. </p>
    <p class="aisnormal">&nbsp;</p>
    <p class="aisnormal">So, the first step should be the creation of a set of nested
    directories:</p>
    <p class="aisnormal"><br>
    <font face="Courier">C:\brahms\projects\Atm</font></p>
    <p class="aisnormal"><br>
    (if you have not created them already, do it now; rest assured that you can create your
    Atm directory everywhere you want, even though in the examples described in this tutorial
    and in the instructions on how to use the Brahms Composer and Virtual Machine batch files
    it will be assumed that this is in fact the location of the directory you will be using.
    If you modify it, remember to change accordingly also your library path in the vm.cfg file
    and the way you call the Builder and the Virtual machine, as discussed in the previous
    chapter). </p>
    <p class="aisnormal"><br>
    Now, the second step: either from a text editor or from the Brahms Composer, create a new file and
    write:</p>
    <p class="aisnormal"><br>
    <font face="Courier">package projects.Atm;<br>
    import projects.Atm.*;</font></p>
    <p class="aisnormal"><br>
    Then, save this file as 'AtmModel.b'. It does not matter that, for the moment, you do not
    have other files to import - these will come soon! </p>
    <p class="aisnormal"><br>
    What is the reason for these two lines?</p>
    <p class="aisnormal"><br>
    Firstly, the package declaration is used to find Brahms concepts in the file system.
    Similarly to Java, in Brahms a package is to be mapped to a directory in the file system.
    The package declaration represents a hierarchical directory structure. The package
    projects.Atm maps to a directory projects\Atm in the file system. If a group Student were
    defined in a file named Student.b then this file would be located in the projects\Atm
    directory. The compiler and Brahms Virtual Machine use the library path to find concepts
    in a specific package relative to the library path. Thus, to reference a specific concept
    in a library, the package name can be used. The package name reflects the directory in
    which the concept is stored with a 'library-path' as its base path. In our case, if the
    library-path is</p>
    <p class="aisnormal"><br>
    <font face="Courier">library-path = c:\brahms </font></p>
    <p class="aisnormal"><br>
    and you have an import statement like</p>
    <p class="aisnormal"><br>
    <font face="Courier">import projects.Atm.Student;</font></p>
    <p class="aisnormal"><br>
    then the concept Student is expected to be defined as</p>
    <p class="aisnormal"><br>
    <font face="Courier">package projects.Atm;<br>
    group Student { }</font></p>
    <p class="aisnormal"><br>
    and is expected to be found in the file</p>
    <p class="aisnormal"><br>
    <font face="Courier">C:\brahms\projects\Atm\Student.b</font></p>
    <p class="aisnormal"><br>
    This is why in previous sections we suggested to add c:\brahms to the library-path. </p>
    <p class="aisnormal"><br>
    Compilation units that do not have a package statement are part of an unnamed package. The
    compiler and Brahms Virtual Machine use the library path to find concepts in an unnamed
    package by trying to locate them in the directory specified by the library path. It is the
    responsibility of the model builder to prevent naming conflicts in concepts that are part
    of an unnamed package. It is highly recommended to use packages for all Brahms concepts.</p>
    <p class="aisnormal"><br>
    Secondly, the import declaration allows a type declared in another package to be referred
    to by a simple name that consists of a single identifier. The import declaration makes
    concepts defined in other compilation units available as one model. In our example, by
    using the star ('*'), we are automatically importing all the .b files that will be found
    by the compiler in the Atm folder. <br>
    By default, every model imports the 'brahms.base.*' library - referred to as the
    'BaseModel' - containing base constructs for groups and classes and containing standard
    available classes and relations. The import of this library does not have to be defined
    explicitly.</td>
  </tr>
</table>
</div><div align="left">

<table border="0" width="100%" cellpadding="0" cellspacing="0">
  <tr>
    <td width="100%"><hr COLOR="#C0C0C0" NOSHADE align="left" size="1">
    </td>
  </tr>
  <tr>
    <td width="100%" align="center"><font size="1" face="Arial">Questions or problems
    regarding this web site should be directed to the <a href="mailto:webmaster@agentisolutions.com">Webmaster</a>.<br>
    Copyright � 2000 NASA Ames Research Center. All rights reserved.<br>
    Last modified: 
	<!--webbot bot="TimeStamp" S-Type="EDITED" S-Format="%A %B %d, %Y" startspan -->Monday April 30, 2007<!--webbot bot="TimeStamp" i-checksum="31391" endspan -->.</font></td>
  </tr>
</table>
</div>
</body>
</html>
